Здравствуйте, меня зовут Еремейкин Петр. Тема моего диплома: Разработка 
программного обеспечения, ориентированного на пользователя, для проведения 
кластер-анализа по критерию наименьших квадратов. Научный руководитель - 
Миркин Борис Григорьевич. 

Пусть имеется N объектов, для каждого объекта определены значения V 
признаков. Множество всех объектов можно представить в виде таблицы, как
показано на слайде. Под кластеризацией понимают выделение групп объектов, 
называемых кластерами. Чёткой формулировки что должно быть включено в 
кластеры не существует. Общая идея состоит в том, чтобы сходные объекты
были включены в один кластер, а несходные - в различные.

Традиционный подход для решения задачи кластеризации - применение алгоритма 
k-means. Он основан на поочерёдной минимизации квадратичного критерия. 
Применение k-means ограничено его недостатками: метод требует задания числа
кластеров, сильно зависит от задания начальных центров, плохо работает на 
зашумлённых данных.

В настоящее время разработано множество перспективных алгоритмов, которые
до сих пор не реализованы в программном коде. Поэтому предлагается 
разработать программную систему, которая включала бы в себя алгоритмы,
приведенные на слайде. Первые три алгоритма относятся к дивизивным, два 
последних - к агломеративным. Дивизивные действуют по принципу сверху-вниз,
тоесть разделяют большие кластеры на более мелкие. Такие алгоритмы начинают
работу с одного большого кластера, и завершают при достижении критерия 
остановки, например, при достижении заданного числа кластеров. 
Агломеративные алгоритмы действуют в противоположном направлении, объединяя
мелкие кластеры в крупные. 

Кратко рассмотрим работу алгоритмов. Алгоритмы разработаны Миркиным БГ, 
мой проект состоит в их программной реализации, поэтому алгоритмы в 
презентации не будут рассматриваться подробно. IKmeans - интеллектуальная версия
k-means с автомитическим выбором числа кластеров. Он работает по следующему 
принципу. Вычисляется глобальный центр, затем определяется наиболее 
удалённый от этого центра объект. Он является начальным центром k-means при 
k=2. Второй центр - в глобальном центре данных. С помощью k-means 
определяется аномальная группа, наиболее отстоящая от центра, после чего 
объекты этой группы исключаются из данных. Процесс повторяется пока не 
останется ни одного объекта. Когда все аномальные группы найдены, 
запускается обычный k-means, уточняя полученные кластеры.

dePDDP работает по принципу разделения кластеров по минимуму функции 
плотности. Для этого для каждого кластера вычисляется первая главная 
компонента, на которую проецируются объекты кластера. По методу Парзена 
строится оценка функции плотности. Наиболее глубокий минимум функции 
плотности определяет разбиение кластера. Процесс повторяется, пока все 
кластеры не будут иметь выпуклые или монотонные функции плотности. 

BiKM-R по сути является алгоритмом раздвоения по методу к-средних, с особым
критерием остановки. В обозначении алгоритма R обозначает случайные проекции
Для определения кластера, который будет разбит на очередной итерации
генерируются случайные направления, на которые проецируются объекты 
кластеров. После для каждого кластера по каждому направлению рассчитывается
функция плотности и определяется отношение числа направлений, которые имеют 
хотя бы один минимум к общему числу направлений, обозначаемое эпсилон. Если 
для кластера отношение эпсилон меньше пороговго значения, разбиение такого
кластера запрещается. (Для разбиения используется интеллектуальная версия 
k-means, для инициализации выбираются два наибольних аномальных кластера).
Процесс повторяется до тех пор, пока есть хотя бы один кластер который можно
разбить.

A-Ward - модификация алгоритма Уорда с применением аномальной инициализации.
В классческой постановке алгоритм Уорда начинает работать с состояния в 
котором каждый объект является простешим кластером. Сравнение расстояний 
между всеми кластерами требует большого времени вычисления. Для сокращения
этого времени было предложено использовать ik-means для поиска первичного 
разбиения. При стандартных настройках параметров, ik-means находит 
избыточное число кластеров, что было обнаружено Миркиным экспериментально.
Начиная с этого первичного разбиения, алгоритм Уорда работает намного 
быстрее. Он ищет два ближайших по расстоянию Уорда кластера и объединяет
их пока не будет достигнуто заданное число кластеров.

Алгоритм A-Ward - pb является обобщением предыдущего алгоритма. Он вводит 
произвольную степень Минковского (обозначенную буквой p) и веса признаков, 
что позволяет достигать очень хороших результатов на зашумлённых данных.
Степень влияния весов признаков регулируется параметром beta. 

Начнем описание программы с точки зрения пользователя. Работа программы 
имеет четыре основные стадии: загрузка данных, нормализация, кластеризация, 
анализ.

Этап первый. Загрузка данных. Для загрузки данныз пользователь в меню должен
выбрать пункт File-Load data file. Появится стандартный диалог выбора файла.
После выбора файла данные будут загружены в программу и отображены в левой 
панели, соответствующей исходным данным. 

Для нормализации данных пользователь должен нажать на иконку настройки 
нормализации, после чего откроется диалог в котором можно задать параметры,
в частности, центр и масштаб. После подтверждения выбранных настроек и 
выбора одного или нескольких признаков для нормализации, нормализуемые 
признаки отображаются в правой панале. 

Следующий этап - кластеризация. Пользователь из меню выбирает один из 
алгоритмов кластеризации, вводит в открывшемся окне настроек параметры 
и запускает алгоритм. После завершения работы алгоритма в столбце номер 
кластера записываются числа, соответствующие номерам кластеров, которым 
принадлежат объекты. 

Анализ результатов в первую очеред заключается в интерпретации текстового
отчета, генерируемого программой. В одтёт входит, например, координаты
центров кластеров в нормализованных и исходных признаках, отностительное 
отклонение центра кластера от глобального центра данных, вклад кластера
в квадратичный разброс данных по признакам и тд. Для облегчения анализа 
в программе может быть построена SVD диаграмма, таблица центров кластеров
гистограмма и много чего еще. 

Рассмотрим внутренюю организацию программы. Она написана на популярном 
языке программирования Python, графический интерфейс разработан на основе
библиотеки PyQt. Для расчёта, анализа и вычислений применялись другие 
библиотеки, пречисленные на слайде. Для тестирования были написаны тесты с
использованием фреймворка pytest. Для компиляции всех программных модулей
в единый исполняемый файл используется утилита pyinstaller. 

Программа состоит из двух основных модулей. Первый независимый модуль
содержит исключительно код, имплиментирующий алгоритмы. В нем содержатся
три пакета: для тестирования, пакет с кодом для генератора синтетических 
данных и пакет с алгоритмами кластеризации. Алгормтмы кластеризации разбиты
на агломеративные и дивизивные. 

На следующем слайде представлена даграмма классов. Общая идея состоит в 
многократном использовании кода, что достигается с помощью наследования 
классов. Определен общий класс кластерной структуры, от которого 
наследуется специальные реализации кластерной структуры для каждого из 
алгоритмов. Реализации алгоритмов используют определённые кластерные 
стурктуры, замена кластерной структуры соответствующим образом изменяет
поведение алгормтма. 

Рассмотрим демонстрационный пример. Для этого я сформировал данные 
размерностью 386x4. Строки соотвествуют моделям смартфонов, которые имеют 
четыре признака: цена, диагональ экрана в дюймах, частота процессора, объем
опреативной памяти. 

Для демонстрации на следующем слайде приведен фрагмент исходных данных.

Для этих данных применено четыре алгоритма. 





